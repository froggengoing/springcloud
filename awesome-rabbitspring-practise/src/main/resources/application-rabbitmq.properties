#https://docs.spring.io/spring-boot/docs/2.1.3.RELEASE/reference/html/common-application-properties.html
#https://docs.spring.io/spring-boot/docs/2.2.2.RELEASE/reference/html/appendix-application-properties.html#templating-properties
##\u81EA\u5B9A\u4E49\u914D\u7F6E
myRabbitmq.directExchangeName=TestDirectExchange
myRabbitmq.directExchangeName.durable=true
myRabbitmq.directExchangeName.autoDelete=false
myRabbitmq.testDirectQueue=TestDirectQueue
myRabbitmq.testDirectQueue.durable=true

rabbitMqService2.spring-boot-exchange=spring-boot-exchange

###rabbit\u914D\u7F6E
# Comma-separated list of addresses to which the client should connect.
#\u6307\u5B9Aclient\u8FDE\u63A5\u5230\u7684server\u7684\u5730\u5740\uFF0C\u591A\u4E2A\u4EE5\u9017\u53F7\u5206\u9694(\u4F18\u5148\u53D6addresses\uFF0C\u7136\u540E\u518D\u53D6host)
spring.rabbitmq.addresses=127.0.0.1
##\u8FDE\u63A5\u5230rabbitMQ\u7684vhost
# Virtual host to use when connecting to the broker.
spring.rabbitmq.virtual-host=HelloRabbit
# Connection timeout. Set it to zero to wait forever.
spring.rabbitmq.connection-timeout=0
# Whether to create an AmqpAdmin bean.
spring.rabbitmq.dynamic=true 
# RabbitMQ host.
#\u670D\u52A1Host
spring.rabbitmq.host=localhost 
# RabbitMQ port.
#\u670D\u52A1\u7AEF\u53E3
spring.rabbitmq.port=5672 
# Login to authenticate against the broker.
#\u767B\u9646\u5BC6\u7801
spring.rabbitmq.password=guest 
# Login user to authenticate to the broker.
#\u767B\u9646\u7528\u6237\u540D
spring.rabbitmq.username=guest 
# Whether to enable publisher confirms.
#spring.rabbitmq.publisher-confirms=false ##\u4E22\u5F03
##\u542F\u7528\u3010\u53D1\u5E03\u786E\u8BA4\u3011\u7C7B\u578B\uFF0CCORRELATED\u3001SIMPLE,NONE
##\u6D88\u8D39\u786E\u8BA4\u53D1\u9001\u81F3exchange
spring.rabbitmq.publisher-confirm-type=SIMPLE
# Whether to enable publisher returns.
##\u6D88\u606F\u786E\u8BA4\u53D1\u9001\u81F3\u961F\u5217
spring.rabbitmq.publisher-returns=false 
# Requested heartbeat timeout; zero for none. If a duration suffix is not specified, seconds will be used.
spring.rabbitmq.requested-heartbeat=60s
#########################################################################
# Duration to wait to obtain a channel if the cache size has been reached.
#\u5F53\u7F13\u5B58\u6570\u91CF\u88AB\u8BBE\u7F6E\u65F6\uFF0C\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6\u4E00\u4E2Achannel\u7684\u8D85\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2\uFF1B\u5982\u679C\u4E3A0\uFF0C\u5219\u603B\u662F\u521B\u5EFA\u4E00\u4E2A\u65B0channel
spring.rabbitmq.cache.channel.checkout-timeout=
# Number of channels to retain in the cache.
#\u7F13\u5B58\u4E2D\u4FDD\u6301\u7684channel\u6570\u91CF
spring.rabbitmq.cache.channel.size=
# Connection factory cache mode.
# \u8FDE\u63A5\u5DE5\u5382\u7F13\u5B58\u6A21\u5F0F\uFF1Achannel \u548C connection
spring.rabbitmq.cache.connection.mode=CHANNEL
# Number of connections to cache.
#\u7F13\u5B58\u7684channel\u6570\uFF0C\u53EA\u6709\u662FCONNECTION\u6A21\u5F0F\u65F6\u751F\u6548
spring.rabbitmq.cache.connection.size=
#########################################################################
# Listener container type.
# \u5BB9\u5668\u7C7B\u578B.simple\u6216direct
spring.rabbitmq.listener.type=simple

# Acknowledge mode of container.
#\u8868\u793A\u6D88\u606F\u786E\u8BA4\u65B9\u5F0F\uFF0C\u5176\u6709\u4E09\u79CD\u914D\u7F6E\u65B9\u5F0F\uFF0C\u5206\u522B\u662Fnone\u3001manual\u548Cauto\uFF1B\u9ED8\u8BA4auto
spring.rabbitmq.listener.direct.acknowledge-mode=manual
# Whether to start the container automatically on startup.
#\u662F\u5426\u542F\u52A8\u65F6\u81EA\u52A8\u542F\u52A8\u5BB9\u5668
spring.rabbitmq.listener.direct.auto-startup=true 
# Number of consumers per queue.
#\u6BCF\u4E2Aqueue\u7684\u6D88\u8D39\u8005\u6570\u91CF
spring.rabbitmq.listener.direct.consumers-per-queue=
# Whether rejected deliveries are re-queued by default.
#\u51B3\u5B9A\u88AB\u62D2\u7EDD\u7684\u6D88\u606F\u662F\u5426\u91CD\u65B0\u5165\u961F\uFF1B\u9ED8\u8BA4\u662Ftrue\uFF08\u4E0E\u53C2\u6570acknowledge-mode\u6709\u5173\u7CFB\uFF09
spring.rabbitmq.listener.direct.default-requeue-rejected=
# How often idle container events should be published.
#\u591A\u5C11\u957F\u65F6\u95F4\u53D1\u5E03\u7A7A\u95F2\u5BB9\u5668\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2
spring.rabbitmq.listener.direct.idle-event-interval=
# Whether to fail if the queues declared by the container are not available on the broker.
# \u662F\u5426\u62A5\u5F02\u5E38\uFF0C\u5982\u679C\u58F0\u660E\u7684queue\u5728broker\u4E0A\u4E0D\u53EF\u7528
spring.rabbitmq.listener.direct.missing-queues-fatal=false 
# Maximum number of unacknowledged messages that can be outstanding at each consumer.
#\u6307\u5B9A\u4E00\u4E2A\u8BF7\u6C42\u80FD\u5904\u7406\u591A\u5C11\u4E2A\u6D88\u606F\uFF0C\u5982\u679C\u6709\u4E8B\u52A1\u7684\u8BDD\uFF0C\u5FC5\u987B\u5927\u4E8E\u7B49\u4E8Etransaction\u6570\u91CF.
spring.rabbitmq.listener.direct.prefetch=1
###########################################################
# Whether publishing retries are enabled.
#\u76D1\u542C\u91CD\u8BD5\u662F\u5426\u53EF\u7528
spring.rabbitmq.listener.direct.retry.enabled=false 
# Duration between the first and second attempt to deliver a message.
#\u7B2C\u4E00\u6B21\u548C\u7B2C\u4E8C\u6B21\u5C1D\u8BD5\u53D1\u5E03\u6216\u4F20\u9012\u6D88\u606F\u4E4B\u95F4\u7684\u95F4\u9694
spring.rabbitmq.listener.direct.retry.initial-interval=1000ms
# Maximum number of attempts to deliver a message.
#\u6700\u5927\u91CD\u8BD5\u6B21\u6570
spring.rabbitmq.listener.direct.retry.max-attempts=3 
# Maximum duration between attempts.
#\u6700\u5927\u91CD\u8BD5\u65F6\u95F4\u95F4\u9694
spring.rabbitmq.listener.direct.retry.max-interval=10000ms
# Multiplier to apply to the previous retry interval.
#\u5E94\u7528\u4E8E\u4E0A\u4E00\u91CD\u8BD5\u95F4\u9694\u7684\u4E58\u6570
spring.rabbitmq.listener.direct.retry.multiplier=1
# Whether retries are stateless or stateful.
#\u91CD\u8BD5\u662F\u6709\u72B6\u6001or\u65E0\u72B6\u6001
spring.rabbitmq.listener.direct.retry.stateless=true
############################################################
# Acknowledge mode of container.
#\u8868\u793A\u6D88\u606F\u786E\u8BA4\u65B9\u5F0F\uFF0C\u5176\u6709\u4E09\u79CD\u914D\u7F6E\u65B9\u5F0F\uFF0C\u5206\u522B\u662Fnone\u3001manual\u548Cauto\uFF1B\u9ED8\u8BA4auto
spring.rabbitmq.listener.simple.acknowledge-mode=
# Whether to start the container automatically on startup.
#\u662F\u5426\u542F\u52A8\u65F6\u81EA\u52A8\u542F\u52A8\u5BB9\u5668
spring.rabbitmq.listener.simple.auto-startup=true
# Maximum number of unacknowledged messages that can be outstanding at each consumer.
# \u4E00\u4E2A\u6D88\u8D39\u8005\u6700\u591A\u53EF\u5904\u7406\u7684nack\u6D88\u606F\u6570\u91CF\uFF0C\u5982\u679C\u6709\u4E8B\u52A1\u7684\u8BDD\uFF0C\u5FC5\u987B\u5927\u4E8E\u7B49\u4E8Etransaction\u6570\u91CF.
spring.rabbitmq.listener.simple.prefetch=
# Minimum number of listener invoker threads.
#\u6700\u5C0F\u7684\u6D88\u8D39\u8005\u6570\u91CF
spring.rabbitmq.listener.simple.concurrency=
# Maximum number of listener invoker threads.
#\u6700\u5927\u7684\u6D88\u8D39\u8005\u6570\u91CF
spring.rabbitmq.listener.simple.max-concurrency=
# Whether rejected deliveries are re-queued by default.
#\u51B3\u5B9A\u88AB\u62D2\u7EDD\u7684\u6D88\u606F\u662F\u5426\u91CD\u65B0\u5165\u961F\uFF1B\u9ED8\u8BA4\u662Ftrue\uFF08\u4E0E\u53C2\u6570acknowledge-mode\u6709\u5173\u7CFB\uFF09
spring.rabbitmq.listener.simple.default-requeue-rejected=
# How often idle container events should be published.
#\u53D1\u5E03\u7A7A\u95F2\u5BB9\u5668\u7684\u65F6\u95F4\u95F4\u9694\uFF0C\u5355\u4F4D\u6BEB\u79D2
spring.rabbitmq.listener.simple.idle-event-interval=
# Whether to fail if the queues declared by the container are not available on the broker and/or whether to stop the container if one or more queues are deleted at runtime.
#\u82E5\u5BB9\u5668\u58F0\u660E\u7684\u961F\u5217\u5728\u4EE3\u7406\u4E0A\u4E0D\u53EF\u7528\uFF0C\u662F\u5426\u5931\u8D25\uFF1B \u6216\u8005\u8FD0\u884C\u65F6\u4E00\u4E2A\u591A\u591A\u4E2A\u961F\u5217\u88AB\u5220\u9664\uFF0C\u662F\u5426\u505C\u6B62\u5BB9\u5668
spring.rabbitmq.listener.simple.missing-queues-fatal=true
############################
# Whether publishing retries are enabled.
spring.rabbitmq.listener.simple.retry.enabled=false 
# Duration between the first and second attempt to deliver a message.
spring.rabbitmq.listener.simple.retry.initial-interval=1000ms
# Maximum number of attempts to deliver a message.
spring.rabbitmq.listener.simple.retry.max-attempts=3 
# Maximum duration between attempts.
spring.rabbitmq.listener.simple.retry.max-interval=10000ms
# Multiplier to apply to the previous retry interval.
spring.rabbitmq.listener.simple.retry.multiplier=1 
# Whether retries are stateless or stateful.
spring.rabbitmq.listener.simple.retry.stateless=true 
# Number of messages to be processed between acks when the acknowledge mode is AUTO. If larger than prefetch, prefetch will be increased to this value.
#spring.rabbitmq.listener.simple.transaction-size= ###Deprecated
#########################################################################

# Whether to enable SSL support.
#\u662F\u5426\u652F\u6301ssl\uFF0C\u9ED8\u8BA4false
spring.rabbitmq.ssl.enabled=false 
# SSL algorithm to use. By default, configured by the Rabbit client library.
#ssl\u4F7F\u7528\u7684\u7B97\u6CD5\uFF0C\u9ED8\u8BA4\u7531rabiitClient\u914D\u7F6E
spring.rabbitmq.ssl.algorithm=
# Path to the key store that holds the SSL certificate.
#\u6301\u6709SSL certificate\u7684key store\u7684\u8DEF\u5F84
spring.rabbitmq.ssl.key-store=
# Password used to access the key store.
spring.rabbitmq.ssl.key-store-password=
# Key store type.
spring.rabbitmq.ssl.key-store-type=PKCS12 
# Trust store that holds SSL certificates.
spring.rabbitmq.ssl.trust-store=
# Password used to access the trust store.
spring.rabbitmq.ssl.trust-store-password=
# Trust store type.
#Trust store \u7C7B\u578B.
spring.rabbitmq.ssl.trust-store-type=JKS 
# Whether to enable server side certificate validation.
#\u662F\u5426\u542F\u7528\u670D\u52A1\u7AEF\u8BC1\u4E66\u9A8C\u8BC1
spring.rabbitmq.ssl.validate-server-certificate=true 
# Whether to enable hostname verification.
#\u662F\u5426\u542F\u7528\u4E3B\u673A\u9A8C\u8BC1
spring.rabbitmq.ssl.verify-hostname=true 
##################################################################
# Name of the default queue to receive messages from when none is specified explicitly.
spring.rabbitmq.template.default-receive-queue=
# Name of the default exchange to use for send operations.
spring.rabbitmq.template.exchange=
# Whether to enable mandatory messages.
#\u5F53mandatory\u6807\u5FD7\u4F4D\u8BBE\u7F6E\u4E3Atrue\u65F6\uFF0C\u5982\u679Cexchange\u6839\u636E\u81EA\u8EAB\u7C7B\u578B\u548C\u6D88\u606FrouteKey\u65E0\u6CD5\u627E\u5230\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684queue\uFF0C
# \u90A3\u4E48\u4F1A\u8C03\u7528basic.return\u65B9\u6CD5\u5C06\u6D88\u606F\u8FD4\u8FD8\u7ED9\u751F\u4EA7\u8005\uFF1B\u5F53mandatory\u8BBE\u4E3Afalse\u65F6\uFF0C\u51FA\u73B0\u4E0A\u8FF0\u60C5\u5F62broker\u4F1A\u76F4\u63A5\u5C06\u6D88\u606F\u6254\u6389\u3002
##\u6307\u5B9A\u6D88\u606F\u5728\u6CA1\u6709\u88AB\u961F\u5217\u63A5\u6536\u65F6\u662F\u5426\u5F3A\u884C\u9000\u56DE\u8FD8\u662F\u76F4\u63A5\u4E22\u5F03
spring.rabbitmq.template.mandatory=
# Timeout for `receive()` operations.
spring.rabbitmq.template.receive-timeout=
# Timeout for `sendAndReceive()` operations.
spring.rabbitmq.template.reply-timeout=
# Whether publishing retries are enabled.
spring.rabbitmq.template.retry.enabled=false 
# Duration between the first and second attempt to deliver a message.
spring.rabbitmq.template.retry.initial-interval=1000ms
# Maximum number of attempts to deliver a message.
spring.rabbitmq.template.retry.max-attempts=3 
# Maximum duration between attempts.
spring.rabbitmq.template.retry.max-interval=10000ms
# Multiplier to apply to the previous retry interval.
spring.rabbitmq.template.retry.multiplier=1 
# Value of a default routing key to use for send operations.
spring.rabbitmq.template.routing-key=
