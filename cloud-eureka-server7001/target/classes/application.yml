server:
  port: 7001
spring:
  application:
    #eurekaserver集群的spring.application.name必须要一致
    name: eureka
eureka:
  instance:
    #nstances currently registered with Eureka中status为该值
    #默认如下形式;mh-fly.mshome.net:eureka:7002
    instance-id: eureka7001
    #集群中hostname必须不一致
    hostname: eureka7001.com
    # true 就可以将IP注册到Eureka Server上，而如果不配置就是机器的主机名。
    prefer-ip-address: true
    # 心跳时间，即服务续约间隔时间（缺省为30s）
    lease-renewal-interval-in-seconds: 5
    # 到期时间，即服务续约到期时间（缺省为90s），即90s后才移除
    lease-expiration-duration-in-seconds: 10
  client:
    register-with-eureka: false
    fetch-registry: false
    # 配置Eureka Server的地址信息，如果是Eureka Server集群，多个节点使用逗号','分割。
    # 如果开启了安全认证，使用HTTP Bacic格式提供用户名和密码。
    # 如果Eureka Server是一个集群，那么配置Eureka Server节点信息的时候，建议将所有的Eureka Server节点信息都配置上
    # 实际上，只配置一个Eureka Server节点其实就可以了，但是，Eureka Server对服务的管理有连带责任。如果只配置一个Eureka Server节点，那么会导致级联删除的风险，可能导致服务不可靠
    # 如果配置了多个Eureka Server节点，Eureka不会将当期的服务同时注册到所有Eureka Server节点上
    # 从第一个配置的Eureka Server节点开始注册，如果注册成功，后续的Eureka Server节点不再重复注册
    # 每30秒，Eureka Client发送一个心跳到Eureka Server上，如果心跳没有反馈，则从已配置的Eureka Server节点列表的下一个服务节点继续注册。
    # 这样做可以保证服务的可靠性，降低服务连带责任导致的服务不可靠。
    # 如果多个Eureka Client需要注册，建议Eureka Server的服务列表顺序是随机排列的。
    # 如：有Eureka Server s1,s2,s3，有Eureka Client c1,c2,c3。
    # 那么在c1上配置的Eureka Server列表建议是s1,s2,s3，在c2上配置的是s2,s3,s1，在c3上配置的是s3,s1,s2，这样可以更好的利用Eureka Server集群的特性。
    # 因为Eureka Server和Eureka Client对心跳的监测都是3*间隔时间的，所以会有服务列表数据的不同步可能。
    # 所以在CAP原则上，Eureka Server是保证AP原则，放弃C原则的。
    #service-url:
      ###单机版
      #defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      ##集群版
      #defaultZone: http://eureka7002.com:7002/eureka
    cache-refresh-executor-exponential-back-off-bound: 10
    heartbeat-executor-exponential-back-off-bound: 10
  server:
    #是否开启自我保护模式，默认为true。
    #server在15分钟内，renews 和renews threshold 的比值小于指定值(默认值为0.85)进入自我保护状态
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 90000
    #renews 和renews threshold 的比值
    renewal-percent-threshold: 0.85
    #多久后出现“自我保护模式”的提示，默认5分钟
    wait-time-in-ms-when-sync-empty: 300000
    #ResponseCacheImpl.readOnlyCacheMap缓存刷新时间
    response-cache-update-interval-ms: 30000
    #是否启用ResponseCacheImpl缓存
    use-read-only-response-cache: true

##官网 https://docs.spring.io/spring-cloud-netflix/docs/2.2.5.RELEASE/reference/html/#spring-cloud-eureka-server
##eureka.server.renewalPercentThreshold，定义了renews 和renews threshold的比值，默认值为0.85。当server在15分钟内，
##比值低于percent，即少了15%的微服务心跳，server会进入自我保护状态，Self-Preservation。在此状态下，server不会删除注册信息，
##这就有可能导致在调用微服务时，实际上服务并不存在。
##eureka.server.enableSelfPreservation=false,关闭自我保护

#server:
#  port: 7001
#spring:
#  profiles: 7001
#eureka:
#  instance:
#    hostname: localhost
#  client:
#    registerWithEureka: false
#    fetchRegistry: false
#    serviceUrl:
#      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
#    #Indicates how often(in seconds) to fetch the registry information from the eureka server.
#    registry-fetch-interval-seconds: 30
#    #Indicates how often(in seconds) to replicate instance changes to be replicated to the eureka server.
#    instance-info-replication-interval-seconds: 30
#  server:
#    #是否开启自我保护模式，默认为true。
#    enable-self-preservation: true
#    eviction-interval-timer-in-ms: 60000
#
#---
#server:
#  port: 7002
#spring:
#  profiles: 7002
#eureka:
#  instance:
#    hostname: localhost
#  client:
#    registerWithEureka: false
#    fetchRegistry: false
#    serviceUrl:
#      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/