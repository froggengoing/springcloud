# Comma-separated list of addresses to which the client should connect.
spring.rabbitmq.addresses= 
# Virtual host to use when connecting to the broker.
spring.rabbitmq.virtual-host= 
# Connection timeout. Set it to zero to wait forever.
spring.rabbitmq.connection-timeout= 
# Whether to create an AmqpAdmin bean.
spring.rabbitmq.dynamic=true 
# RabbitMQ host.
spring.rabbitmq.host=localhost 
# RabbitMQ port.
spring.rabbitmq.port=5672 
# Login to authenticate against the broker.
spring.rabbitmq.password=guest 
# Login user to authenticate to the broker.
spring.rabbitmq.username=guest 
# Whether to enable publisher confirms.
spring.rabbitmq.publisher-confirms=false 
# Whether to enable publisher returns.
spring.rabbitmq.publisher-returns=false 
# Requested heartbeat timeout; zero for none. If a duration suffix is not specified, seconds will be used.
spring.rabbitmq.requested-heartbeat= 
#########################################################################

# Duration to wait to obtain a channel if the cache size has been reached.
spring.rabbitmq.cache.channel.checkout-timeout= 
# Number of channels to retain in the cache.
spring.rabbitmq.cache.channel.size= 
# Connection factory cache mode.
spring.rabbitmq.cache.connection.mode=channel 
# Number of connections to cache.
spring.rabbitmq.cache.connection.size= 
#########################################################################

# Acknowledge mode of container.
spring.rabbitmq.listener.direct.acknowledge-mode= 
# Whether to start the container automatically on startup.
spring.rabbitmq.listener.direct.auto-startup=true 
# Number of consumers per queue.
spring.rabbitmq.listener.direct.consumers-per-queue= 
# Whether rejected deliveries are re-queued by default.
spring.rabbitmq.listener.direct.default-requeue-rejected= 
# How often idle container events should be published.
spring.rabbitmq.listener.direct.idle-event-interval= 
# Whether to fail if the queues declared by the container are not available on the broker.
spring.rabbitmq.listener.direct.missing-queues-fatal=false 
# Maximum number of unacknowledged messages that can be outstanding at each consumer.
spring.rabbitmq.listener.direct.prefetch= 
# Whether publishing retries are enabled.
spring.rabbitmq.listener.direct.retry.enabled=false 
# Duration between the first and second attempt to deliver a message.
spring.rabbitmq.listener.direct.retry.initial-interval=1000ms 
# Maximum number of attempts to deliver a message.
spring.rabbitmq.listener.direct.retry.max-attempts=3 
# Maximum duration between attempts.
spring.rabbitmq.listener.direct.retry.max-interval=10000ms 
# Multiplier to apply to the previous retry interval.
spring.rabbitmq.listener.direct.retry.multiplier=1 
# Whether retries are stateless or stateful.
spring.rabbitmq.listener.direct.retry.stateless=true 
# Acknowledge mode of container.
spring.rabbitmq.listener.simple.acknowledge-mode= 
# Whether to start the container automatically on startup.
spring.rabbitmq.listener.simple.auto-startup=true 
# Minimum number of listener invoker threads.
spring.rabbitmq.listener.simple.concurrency= 
# Whether rejected deliveries are re-queued by default.
spring.rabbitmq.listener.simple.default-requeue-rejected= 
# How often idle container events should be published.
spring.rabbitmq.listener.simple.idle-event-interval= 
# Maximum number of listener invoker threads.
spring.rabbitmq.listener.simple.max-concurrency= 
# Whether to fail if the queues declared by the container are not available on the broker and/or whether to stop the container if one or more queues are deleted at runtime.
spring.rabbitmq.listener.simple.missing-queues-fatal=true 
# Maximum number of unacknowledged messages that can be outstanding at each consumer.
spring.rabbitmq.listener.simple.prefetch= 
# Whether publishing retries are enabled.
spring.rabbitmq.listener.simple.retry.enabled=false 
# Duration between the first and second attempt to deliver a message.
spring.rabbitmq.listener.simple.retry.initial-interval=1000ms 
# Maximum number of attempts to deliver a message.
spring.rabbitmq.listener.simple.retry.max-attempts=3 
# Maximum duration between attempts.
spring.rabbitmq.listener.simple.retry.max-interval=10000ms 
# Multiplier to apply to the previous retry interval.
spring.rabbitmq.listener.simple.retry.multiplier=1 
# Whether retries are stateless or stateful.
spring.rabbitmq.listener.simple.retry.stateless=true 
# Number of messages to be processed between acks when the acknowledge mode is AUTO. If larger than prefetch, prefetch will be increased to this value.
spring.rabbitmq.listener.simple.transaction-size= 
# Listener container type.
spring.rabbitmq.listener.type=simple 
#########################################################################

# SSL algorithm to use. By default, configured by the Rabbit client library.
spring.rabbitmq.ssl.algorithm= 
# Whether to enable SSL support.
spring.rabbitmq.ssl.enabled=false 
# Path to the key store that holds the SSL certificate.
spring.rabbitmq.ssl.key-store= 
# Password used to access the key store.
spring.rabbitmq.ssl.key-store-password= 
# Key store type.
spring.rabbitmq.ssl.key-store-type=PKCS12 
# Trust store that holds SSL certificates.
spring.rabbitmq.ssl.trust-store= 
# Password used to access the trust store.
spring.rabbitmq.ssl.trust-store-password= 
# Trust store type.
spring.rabbitmq.ssl.trust-store-type=JKS 
# Whether to enable server side certificate validation.
spring.rabbitmq.ssl.validate-server-certificate=true 
# Whether to enable hostname verification.
spring.rabbitmq.ssl.verify-hostname=true 
# Name of the default queue to receive messages from when none is specified explicitly.
spring.rabbitmq.template.default-receive-queue= 
# Name of the default exchange to use for send operations.
spring.rabbitmq.template.exchange= 
# Whether to enable mandatory messages.
spring.rabbitmq.template.mandatory= 
# Timeout for `receive()` operations.
spring.rabbitmq.template.receive-timeout= 
# Timeout for `sendAndReceive()` operations.
spring.rabbitmq.template.reply-timeout= 
# Whether publishing retries are enabled.
spring.rabbitmq.template.retry.enabled=false 
# Duration between the first and second attempt to deliver a message.
spring.rabbitmq.template.retry.initial-interval=1000ms 
# Maximum number of attempts to deliver a message.
spring.rabbitmq.template.retry.max-attempts=3 
# Maximum duration between attempts.
spring.rabbitmq.template.retry.max-interval=10000ms 
# Multiplier to apply to the previous retry interval.
spring.rabbitmq.template.retry.multiplier=1 
# Value of a default routing key to use for send operations.
spring.rabbitmq.template.routing-key= 





spring.rabbitmq.listener.type=simple: 容器类型.simple或direct
 
spring.rabbitmq.listener.simple.auto-startup=true: 是否启动时自动启动容器
spring.rabbitmq.listener.simple.acknowledge-mode: 表示消息确认方式，其有三种配置方式，分别是none、manual和auto；默认auto
spring.rabbitmq.listener.simple.concurrency: 最小的消费者数量
spring.rabbitmq.listener.simple.max-concurrency: 最大的消费者数量
spring.rabbitmq.listener.simple.prefetch: 一个消费者最多可处理的nack消息数量，如果有事务的话，必须大于等于transaction数量.
spring.rabbitmq.listener.simple.transaction-size: 当ack模式为auto时，一个事务（ack间）处理的消息数量，最好是小于等于prefetch的数量.若大于prefetch， 则prefetch将增加到这个值
spring.rabbitmq.listener.simple.default-requeue-rejected: 决定被拒绝的消息是否重新入队；默认是true（与参数acknowledge-mode有关系）
spring.rabbitmq.listener.simple.missing-queues-fatal=true 若容器声明的队列在代理上不可用，是否失败； 或者运行时一个多多个队列被删除，是否停止容器
spring.rabbitmq.listener.simple.idle-event-interval: 发布空闲容器的时间间隔，单位毫秒
spring.rabbitmq.listener.simple.retry.enabled=false: 监听重试是否可用
spring.rabbitmq.listener.simple.retry.max-attempts=3: 最大重试次数
spring.rabbitmq.listener.simple.retry.max-interval=10000ms: 最大重试时间间隔
spring.rabbitmq.listener.simple.retry.initial-interval=1000ms:第一次和第二次尝试传递消息的时间间隔
spring.rabbitmq.listener.simple.retry.multiplier=1: 应用于上一重试间隔的乘数
spring.rabbitmq.listener.simple.retry.stateless=true: 重试时有状态or无状态
 
spring.rabbitmq.listener.direct.acknowledge-mode= ack模式
spring.rabbitmq.listener.direct.auto-startup=true 是否在启动时自动启动容器
spring.rabbitmq.listener.direct.consumers-per-queue= 每个队列消费者数量.
spring.rabbitmq.listener.direct.default-requeue-rejected= 默认是否将拒绝传送的消息重新入队.
spring.rabbitmq.listener.direct.idle-event-interval= 空闲容器事件发布时间间隔.
spring.rabbitmq.listener.direct.missing-queues-fatal=false若容器声明的队列在代理上不可用，是否失败.
spring.rabbitmq.listener.direct.prefetch= 每个消费者可最大处理的nack消息数量.
spring.rabbitmq.listener.direct.retry.enabled=false  是否启用发布重试机制.
spring.rabbitmq.listener.direct.retry.initial-interval=1000ms # Duration between the first and second attempt to deliver a message.
spring.rabbitmq.listener.direct.retry.max-attempts=3 # Maximum number of attempts to deliver a message.
spring.rabbitmq.listener.direct.retry.max-interval=10000ms # Maximum duration between attempts.
spring.rabbitmq.listener.direct.retry.multiplier=1 # Multiplier to apply to the previous retry interval.
spring.rabbitmq.listener.direct.retry.stateless=true # Whether retries are stateless or stateful.