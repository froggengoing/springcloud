<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="1133" xmlns="http://www.w3.org/2000/svg" xmlns:ev="http://www.w3.org/2001/xml-events" viewBox="0 0 1133 804" height="804"><style type="text/css"><![CDATA[
.st2 {fill:#344961;font-family:宋体;font-size:12pt}
.st1 {fill:#344961;font-family:宋体;font-size:14pt;font-weight:bold}
.st4 {fill:#344961;font-family:宋体;font-size:16pt;font-weight:bold}
.st3 {font-weight:bold}
]]></style><defs/><g id="page1" transform="translate(5,5)"><rect width="1123" stroke="#808080" fill="#ffffff" y="0" height="794" x="0"/><g transform="translate(17.92,95)"><path id="shape1" stroke="#8d9cb1" fill="#ffffff" d="M1086.7,56L1086.7,0L0,0L0,56L1086.7,56z"/><text class="st1"><tspan y="35" x="406.3">SingleThreadEventExecutor</tspan></text></g><g transform="translate(17.92,152)"><path id="shape2" stroke="#8d9cb1" fill="#ffffff" d="M0,114.6L0,0L1086.7,0L1086.7,114.6C906.2,92.8,723.8,92.8,543.3,114.6C362.9,136.5,180.5,136.5,0,114.6z"/><text class="st2"><tspan y="52.5" x="4.3" class="st3">SingleThreadEventExecutor</tspan><tspan>(EventExecutorGroup, Executor,boolean addTaskWakesUp, int maxPendingTasks,RejectedExecutionHandler)</tspan><tspan y="70.5" x="4.3">Queue&lt;Runnable> </tspan><tspan class="st3">taskQueue</tspan><tspan> = newTaskQueue(this.maxPendingTasks);</tspan></text></g><g transform="translate(17.92,344)"><path id="shape3" stroke="#8d9cb1" fill="#ffffff" d="M1086.7,56L1086.7,0L0,0L0,56L1086.7,56z"/><text class="st1"><tspan y="35" x="428.3">SingleThreadEventLoop</tspan></text></g><g transform="translate(17.92,401)"><path id="shape4" stroke="#8d9cb1" fill="#ffffff" d="M0,74.4L0,0L1086.7,0L1086.7,74.4C905.9,60.2,724.2,60.2,543.3,74.4C362.5,88.5,180.8,88.5,0,74.4z"/><text class="st2"><tspan y="29.5" x="4.3" class="st3">SingleThreadEventLoop</tspan><tspan>(EventLoopGroup, Executor,boolean addTaskWakesUp, int maxPendingTasks,RejectedExecutionHandler)</tspan><tspan y="47.5" x="4.3">Queue&lt;Runnable> </tspan><tspan class="st3">tailTasks</tspan><tspan> = newTaskQueue(maxPendingTasks)(父类实现) = new LinkedBlockingQueue&lt;Runnable>(maxPendingTasks);</tspan></text></g><g transform="translate(17.92,530)"><path id="shape5" stroke="#8d9cb1" fill="#ffffff" d="M1086.7,56L1086.7,0L0,0L0,56L1086.7,56z"/><text class="st4"><tspan y="36" x="471.3">NioEventLoop</tspan></text></g><g transform="translate(17.92,587)"><path id="shape6" stroke="#8d9cb1" fill="#ffffff" d="M0,139.1L0,0L1086.7,0L1086.7,139.1C906.5,112.6,723.5,112.6,543.3,139.1C363.2,165.6,180.1,165.6,0,139.1z"/><text class="st2"><tspan y="39.5" x="4.3">NioEventLoop(NioEventLoopGroup, Executor, SelectorProvider,SelectStrategy, RejectedExecutionHandler)//由NioEventLoopGroup创建</tspan><tspan y="57.5" x="4.3">Selector </tspan><tspan class="st3">selector</tspan><tspan>;</tspan><tspan y="75.5" x="4.3">Selector </tspan><tspan class="st3">unwrappedSelector</tspan><tspan>;</tspan><tspan y="93.5" x="4.3">SelectedSelectionKeySet </tspan><tspan class="st3">selectedKeys</tspan><tspan>;</tspan><tspan y="111.5" x="4.3">nt </tspan><tspan class="st3">SELECTOR_AUTO_REBUILD_THRESHOLD</tspan><tspan> = 512;//</tspan><tspan class="st3">空轮询</tspan><tspan>最大次数，达到则rebuildSelector</tspan></text></g><g id="shape7" transform="translate(561.26,344)"><path stroke="#236ea1" fill="none" d="M0,0L0,-29L-0,-73"/><path stroke-width="1" stroke="#236ea1" stroke-linecap="round" fill="#236ea1" d="M-0,-77.4L-3,-72.2C-2.1,-72.7,-1.1,-73,-0,-73C1.1,-73,2.1,-72.7,3,-72.2L-0,-77.4"/></g><g id="shape8" transform="translate(561.26,530)"><path stroke="#236ea1" fill="none" d="M0,0L0,-50.2"/><path stroke-width="1" stroke="#236ea1" stroke-linecap="round" fill="#236ea1" d="M0,-54.6L-3,-49.4C-2.1,-49.9,-1.1,-50.2,0,-50.2C1.1,-50.2,2.1,-49.9,3,-49.4L0,-54.6"/></g></g></svg>